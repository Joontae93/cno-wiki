---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import CodeBlock from '../components/CodeBlock.astro';

const frontMatter = `
title: 'string',
description: 'string',
pubDate: 'Mar ## 20##',
heroImage: '(optional) /cno-wiki/public/image-url.jpg',
author: 'string',
updatedDate:  '(optional) string'`;

const phpExample = `\`\`\`php
function your_php_here() {
  $is_formatted = true;
  return is_formatted;
}
\`\`\``;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<script src="../prism/prism.js" is:inline></script>
		<Header title={SITE_TITLE} />
		<main>
			<article>
				<section class="intro">
					<h2>Hey there, dev! üßë‚Äçüíª</h2>
					<p>
						In this wiki, we will hopefully begin to define styles,
						code standards, etc. Let's get started!
					</p>
				</section>
				<section class="how-to">
					<h2>Some Quick Tips üìù</h2>
					<div class="tip">
						<h3 class="tip__title">Adding Content ‚úçÔ∏è</h3>
						<div class="tip__content">
							<h4>File Types (aka Using MDX)</h4>
							<p>
								Since we're a dev team, it is a fair assumption
								that we'll often be sharing code solutions or
								snippets with each other. To that end, using a
								`.mdx` file instead of a pure markdown file
								(`.md`) will allow us one clean trick: copiable
								code snippets! After the frontmatter (see
								below), import a CodeBlock component with <CodeBlock
									language="js"
									codeBlock="import CodeBlock from 'relative/path/to/components/CodeBlock.astro"
								/> and you'll then be able to use the CodeBlock snippet
								throughout your MDX file.
							</p>
							<p>
								The <code>{`<CodeBlock />`}</code> component takes
								two properties: <code>language</code> and <code
									>codeBlock</code
								>. Both properties are strings, and if you're
								using VS Code, you'll get intelligent hints
								about which languages you can use. <CodeBlock
									language="js"
									codeBlock={`Props {
	language: 'js' | 'scss' | 'php' | 'html' | 'md';
	codeBlock: string;
}`}
								/>
								<p>
									When adding the string to the <code
										>codeBlock</code
									> prop, use the following syntax: <code
										>codeBlock=&lcub;`your_code_inside_the_back_ticks`&rcub;</code
									>.
								</p>
								<p>
									If you'd simply like to add a code block
									(but <strong>not</strong> have it copyable, you
									can use Markdown's triple-backtick expression.
									You can also add a language hint immediately
									after the first 3 backticks to have Astro auto-highlight
									your syntax. For example,<br />
									<CodeBlock
										language="php"
										codeBlock={phpExample}
									/>
									would parse out to something like <CodeBlock
										language="php"
										codeBlock={`function your_php_here() {
  $is_formatted = true;
  return is_formatted;
}`}
									/> (except without the copy-to-clipboard functionality).
								</p>
								<p>
									<hr />
									<h4>Adding New Content</h4>
									<p>
										To add content to the blog, drop some
										markdown files to
										<code
											>/src/content/blog/wherever-makes-logical-sense</code
										>
										and push the commit.
									</p>

									<p>
										All markdown files are looking for the
										following frontmatter (dropped between
										opening & closing triple hyphens):
										<CodeBlock
											language="md"
											codeBlock={frontMatter}
										/>
									</p>
								</p>
							</p>
							<div class="tip">
								<h3 class="tip__title">Modifying Content üñçÔ∏è</h3>
								<p class="tip__content">
									If making a change to a blog post, make sure
									to change the updated date!
								</p>
								<CodeBlock
									codeBlock={`updatedDate: '[YOUR_DATE_HERE]'`}
									language="md"
								/>
							</div>
						</div>
						<Footer />
					</div>
				</section>
			</article>
		</main>
	</body>
</html>
